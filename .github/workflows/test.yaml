name: Integration tests

on:
  pull_request:
  push:
    branches: [main]

jobs:
  build-closure:
    strategy:
      matrix:
        runner:
          - ubuntu-22.04
          - namespace-profile-default-arm64
          - macos-12
          - macos-latest-xlarge
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
      id-token: write
    env:
      CLOSURE_FILE: magic-nix-cache.${{ matrix.runner }}.closure.xz
      CLOSURE_KEY: magic-nix-cache-${{ matrix.runner }}-${{ github.sha }}
    steps:
      - uses: actions/checkout@v3

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Build package
        run: |
          nix build .# -L --fallback && \
          nix-store --export $(nix-store -qR ./result) | xz -9 > "${{ env.CLOSURE_FILE }}"

      - name: Cache magix-nix-cache closure
        uses: actions/cache/save@v4
        with:
          path: ${{ env.CLOSURE_FILE }}
          key: ${{ env.CLOSURE_KEY }}

  test-magic-nix-cache-action:
    needs: build-closure
    strategy:
      matrix:
        runner:
          - ubuntu-22.04
          - namespace-profile-default-arm64
          - macos-12
          - macos-latest-xlarge
    runs-on: ${{ matrix.runner }}
    permissions:
      contents: read
      id-token: write
    env:
      CLOSURE_FILE: magic-nix-cache.${{ matrix.runner }}.closure.xz
      CLOSURE_KEY: magic-nix-cache-${{ matrix.runner }}-${{ github.sha }}
    steps:
      - name: Restore magix-nix-cache closure
        uses: actions/cache/restore@v4
        with:
          path: ${{ env.CLOSURE_FILE }}
          key: ${{ env.CLOSURE_KEY }}
          fail-on-cache-miss: true

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main

      - name: Extract
        id: extract
        run: |
          OUTPUT=$(cat ${{ env.CLOSURE_FILE }} | xz -d | nix-store --import)
          MNC_BIN_PATH=$(echo "${OUTPUT}" | tail -n 1)
          MAGIC_NIX_CACHE="${MNC_BIN_PATH}/bin/magic-nix-cache"

          echo "mnc-path=${MAGIC_NIX_CACHE}" >> "$GITHUB_OUTPUT"

      - uses: DeterminateSystems/magic-nix-cache-action@main
        with:
          source-binary: "${{ steps.extract.outputs.mnc-path }}"
