name: Build artifacts

on:
  workflow_dispatch:
  workflow_call:

jobs:
  build-artifacts:
    runs-on: ${{ matrix.systems.runner }}
    permissions:
      contents: read
      id-token: write
    env:
      ARTIFACT_KEY: magic-nix-cache-${{ matrix.systems.system }}
      ARCHIVE_NAME: magic-nix-cache.closure.xz
    strategy:
      matrix:
        systems:
          - nix-system: aarch64-darwin
            system: ARM64-macOS
            runner: macos-latest-xlarge
            determinate: true
          - nix-system: aarch64-darwin
            system: ARM64-macOS
            runner: macos-latest-xlarge
            determinate: false
    steps:
      - uses: actions/checkout@v3
      - name: Install Nix on ${{ matrix.systems.system }}
        uses: DeterminateSystems/nix-installer-action@main
        with:
          extra-args: ${{ (matrix.systems.determinate && '--determinate') || '' }} --nix-package-url https://hydra.nixos.org/build/271466854/download/1/nix-2.24.5-aarch64-darwin.tar.xz
          flakehub: true
        #   extra-conf: "max-substitution-jobs = 8"
      - name: fixup dnixd launchd conf
        run: |
          nix profile install nixpkgs#gnused
          sudo $(which sed) -i 's/1048576/4194304/g' /Library/LaunchDaemons/systems.determinate.nix-daemon.plist || echo "not detsys"
          sudo $(which sed) -i 's/2097152/4194304/g' /Library/LaunchDaemons/systems.determinate.nix-daemon.plist || echo "not detsys"
          sudo $(which sed) -i 's/1048576/4194304/g' /Library/LaunchDaemons/org.nixos.nix-daemon.plist || echo "detsys"
          sudo $(which sed) -i 's/2097152/4194304/g' /Library/LaunchDaemons/org.nixos.nix-daemon.plist || echo "detsys"
          sudo launchctl kickstart -k system/systems.determinate.nix-daemon || echo "not detsys"
          sudo launchctl kickstart -k system/org.nixos.nix-daemon || echo "detsys"
      - name: Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@main

      - name: Build and cache dev shell for ${{ matrix.systems.nix-system }}
        run: |
          printf "\n\n# %s\n\n" "$RANDOM" >> Cargo.toml
          nix build ".#devShells.${{ matrix.systems.nix-system }}.default"

      - name: Build package and create closure for ${{ matrix.systems.system }}
        run: |
          nix build .# -L --fallback && \
            nix-store --export $(nix-store -qR ./result) | xz -9 > "${{ env.ARCHIVE_NAME }}"

      - name: Upload magic-nix-cache closure for ${{ matrix.systems.system }}
        uses: actions/upload-artifact@v3.1.2
        with:
          # Artifact name
          name: ${{ env.ARTIFACT_KEY }}
          path: ${{ env.ARCHIVE_NAME }}
          retention-days: 1
